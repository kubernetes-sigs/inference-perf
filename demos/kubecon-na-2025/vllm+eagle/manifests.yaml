apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vllm-inference-server
  name: vllm-deployment
  namespace: test-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vllm-inference-server
  template:
    metadata:
      labels:
        app: vllm-inference-server
        examples.ai.gke.io/source: blueprints
    spec:
      containers:
      - args:
        - "--model=$(MODEL_ID)"
        - "--gpu_memory_utilization=0.9"
        - "--max-model-len=512"
        - "--max-num-seqs=128"
        - "--speculative_config"
        - '{"method": "eagle3", "model": "yuhuili/EAGLE3-LLaMA3.1-Instruct-8B", "num_speculative_tokens": 4, "draft_tensor_parallel_size": 1}'
        command:
        - python3
        - "-m"
        - vllm.entrypoints.openai.api_server
        env:
        - name: MODEL_ID
          value: meta-llama/Llama-3.1-8B-Instruct
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom:
            secretKeyRef:
              key: hf_api_token
              name: hf-secret
        - name: PATH
          value: "/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        - name: LD_LIBRARY_PATH
          value: "/usr/local/nvidia/lib:/usr/local/nvidia/lib64"
        image: vllm/vllm-openai:v0.11.0
        name: inference-server
        ports:
        - containerPort: 8000
          name: metrics
        readinessProbe:
          failureThreshold: 60
          httpGet:
            path: "/health"
            port: 8000
          periodSeconds: 10
        resources:
          limits:
            nvidia.com/gpu: 1
          requests:
            nvidia.com/gpu: 1
        volumeMounts:
        - mountPath: "/dev/shm"
          name: dshm
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-h100-80gb
      volumes:
      - emptyDir:
          medium: Memory
        name: dshm
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: vllm-inference-server
  name: vllm-service
  namespace: test-ns
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: vllm-inference-server
  type: ClusterIP
---
apiVersion: monitoring.googleapis.com/v1
kind: PodMonitoring
metadata:
  labels:
    app: vllm-inference-server
  name: vllm-podmonitoring
  namespace: test-ns
spec:
  endpoints:
  - interval: 15s
    path: "/metrics"
    port: metrics
  selector:
    matchLabels:
      app: vllm-inference-server
  targetLabels:
    metadata:
    - pod
    - container
    - node
