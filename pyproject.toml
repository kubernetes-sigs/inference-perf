[project]
name = "inference-perf"
version = "0.0.1"
description = "A GenAI inference performance benchmarking tool."
authors = []
dependencies = [
    "aiohttp>=3.11.11",
    "pydantic>=2.10.6",
    "numpy>=2.2.2",
    "datasets>=3.3.2",
    "transformers>=4.50.2",
]
requires-python = ">=3.12"
readme = "README.md"
license = {text = "Apache-2.0"}

[project.scripts]
inference-perf = "inference_perf:main_cli"

[project.optional-dependencies]
dev = [
    "mypy>=1.14.1",
    "ruff>=0.9.4",
    "pre-commit>=4.1.0",
    "pytest>=8.3.4",
    "types-PyYAML>=6.0.12.20241230",
    "ipykernel>=6.29.5",
    "types-requests>=2.32.0.20250328",
]

[tool.ruff]
# The GitHub editor is 127 chars wide
line-length = 127
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# On top of the defaults (`E4`, E7`, `E9`, and `F`), enable flake8-bugbear (`B`)
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "B"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.pdm]
distribution = true

[tool.pytest.ini_options]
testpaths = ["."]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.setuptools.packages.find]
where = ["."]
include = ["inference_perf*", "deploy*"]

[[tool.mypy.overrides]]
module = ["datasets.*"]
ignore_missing_imports = true

[tool.mypy]
disable_error_code = ["attr-defined"]

[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"