name: Release Processing
on:
  push:
    tags:
      - 'v*.*.*'  # Matches semantic versioning tags like v1.0.0
permissions:
  contents: write
  pull-requests: read
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Get full history for changelog

    - name: Set env variable for tag name
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Set image name
      run: echo "IMAGE_NAME=quay.io/inference-perf/inference-perf" >> $GITHUB_ENV

    - name: Generate changelog
      id: github_release
      uses: mikepenz/release-changelog-builder-action@v3
      with:
        configuration: ".github/changelog-config.json"
        ignorePreReleases: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ env.RELEASE_VERSION }}
        body: |
          # Release ${{ env.RELEASE_VERSION }}

          ## What's Changed
          ${{ steps.github_release.outputs.changelog }}

          ## Docker Image

          `${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}`

          ## Python Package

          `pip install inference-perf==${{ env.RELEASE_VERSION }}`

          ## Helm Chart

          `helm install inference-perf oci://quay.io/inference-perf/charts/inference-perf`

          ## Contributors

          ${{ steps.github_release.outputs.contributors }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  python-package:
    needs: build-and-publish  # Run after the release is created
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build twine

      - name: Update version in pyproject.toml
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Updating version to: $VERSION"
          # Use sed to update the version in pyproject.toml
          sed -i 's/version = ".*"/version = "'$VERSION'"/' pyproject.toml

      - name: Build package
        run: python -m build

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload dist/*.whl dist/*.tar.gz

  docker:
    needs: build-and-publish  # Run after the release is created
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Set image name and tags
        run: |
          # Set the image name directly in the build step to avoid masking issues
          echo "TAG_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "IMAGE_NAME=quay.io/inference-perf/inference-perf" >> $GITHUB_ENV

      - name: Debug image configuration
        run: |
          echo "=== Docker Build Configuration ==="
          echo "Tag version: ${{ env.TAG_VERSION }}"
          echo "Image name: ${{ env.IMAGE_NAME }}"
          echo "Full tags: ${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}, ${{ env.IMAGE_NAME }}:latest"
          echo "================================"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}
            ${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.title=inference-perf
            org.opencontainers.image.description=GenAI inference performance benchmarking tool
            org.opencontainers.image.version=${{ env.TAG_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.licenses=Apache-2.0
          cache-from: type=gha
          cache-to: type=gha,mode=max

  helm-chart:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Package Helm Chart
        shell: bash
        run: |
          mkdir -p helm-releases
          # Remove 'v' prefix from version
          CHART_VERSION=${GITHUB_REF#refs/tags/v}
          helm package deploy/inference-perf -d helm-releases --version $CHART_VERSION --app-version ${{ env.RELEASE_VERSION }}

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Push Helm chart to OCI registry
        run: |
          # Remove 'v' prefix from version
          CHART_VERSION=${GITHUB_REF#refs/tags/v}
          helm push helm-releases/inference-perf-${CHART_VERSION}.tgz oci://quay.io/inference-perf/charts
